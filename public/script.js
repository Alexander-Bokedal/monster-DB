///////////////////////////////////////////////////////
///////////////////////////////////////////////////////
/////// KOMMENTERA RUNT KODSTYCKEN S√ÖH√ÑR  ///////////
////// T.EX "KOD F√ñR ATT L√ÑGGA TILL MONSTER"/////////
//////  S√ñKORD: addMonster                //////////
////// "SLUT P√Ö KOD F√ñR ATT L√ÑGGA TILL MONSTER" //////////
///////////////////////////////////////////////////////
///////////////////////////////////////////////////////

//S√ñKORD:
// addMonster
// renderMonsters
// monsterType
// monsterSettings
// filterMonsterList
// editMonster
// Allm√§nt
// removeMonster (funktion inte gjord √§n)
// Optimera

// Det h√§r √§r s√∂kordet om man vill hitta saker att jobba med i koden
// VAD SOM BEH√ñVER G√ñRAS:

///////////////////////////////////////////////////////
///////////////////////////////////////////////////////
//////  KOD F√ñR ATT L√ÑGGA TILL MONSTER       /////////
//////  S√ñKORD: addMonster                //////////
///////////////////////////////////////////////////////
///////////////////////////////////////////////////////

const monsters = [
  {
    name: "Henke Penke",
    monsterType: "Strong",
    monsterHorns: 17,
    monsterLegs: 2,
    monsterEyes: 4,
    monsterTentacles: 10,
    deleteSelf() {
      const index = monsters.indexOf(this);
      if (index > -1) {
        monsters.splice(index, 1);

        renderMonsters();
      }
    },
  },
  {
    name: "Boke Dale",
    monsterType: "Weak",
    monsterHorns: 5,
    monsterLegs: 2,
    monsterEyes: 2,
    monsterTentacles: 7,
    deleteSelf() {
      const index = monsters.indexOf(this);
      if (index > -1) {
        monsters.splice(index, 1);

        renderMonsters();
      }
    },
  },
  {
    name: "Khani Bani",
    monsterType: "Strong",
    monsterHorns: 3,
    monsterLegs: 2,
    monsterEyes: 1,
    monsterTentacles: 17,
    deleteSelf() {
      const index = monsters.indexOf(this);
      if (index > -1) {
        monsters.splice(index, 1);

        renderMonsters();
      }
    },
  },
  {
    name: "Denni Penni",
    monsterType: "Anime",
    monsterHorns: 6,
    monsterLegs: 2,
    monsterEyes: 4,
    monsterTentacles: 3,
    deleteSelf() {
      const index = monsters.indexOf(this);
      if (index > -1) {
        monsters.splice(index, 1);

        renderMonsters();
      }
    },
  },
  {
    name: "Affe Baffe",
    monsterType: "Wow",
    monsterHorns: 6,
    monsterLegs: 2,
    monsterEyes: 4,
    monsterTentacles: 3,
    deleteSelf() {
      const index = monsters.indexOf(this);
      if (index > -1) {
        monsters.splice(index, 1);

        renderMonsters();
      }
    },
  },
];

// Lista med f√∂rutbest√§mda monster
// Den h√§r √§r till f√∂r att l√§ttare kunna arbeta med inneh√•llet p√• hemsidan
// Kommentera ut det h√§r om du vill ha bort listan med monster
onload = () => {
  renderMonsters();
};

const doneButton = document.getElementById("done-button");

// FUNKTION F√ñR ATT L√ÑGGA TILL MONSTER I LISTAN
const addMonsterToArray = () => {
  //SKAPA BEH√ÖLLARE MED INNEH√ÖLL FR√ÖN INPUTFORM!
  // VAD SOM BEH√ñVER G√ñRAS:
  // Se √∂ver denna kod s√• att den matchar inputform
  // Skapa kod som till√•ter det h√§r att redigeras p√• ett st√§lle (VG NIV√Ö - M√ñJLIGTVIS DEN SV√ÖRASTE PUNKTEN I HELA PROJEKTET (ELLER S√Ö √ÑR DET JAG SOM √ÑR KORKAD))
  /*  const monsterName = document.getElementById("monsterName").value;
  const monsterType = document.getElementById("monsterType").value;
  const monsterHorns = document.getElementById("monsterHorns").value;
  const monsterLegs = document.getElementById("monsterLegs").value;
  const monsterEyes = document.getElementById("monsterEyes").value;
  const monsterTentacles = document.getElementById("monsterTentacles").value; */

  const monsterType = "test";
  const monsterName = "test";
  const monsterHorns = "test";
  const monsterEyes = "test";
  const monsterLegs = "test";
  const monsterTentacles = "test";

  // SKAPA ETT MONSTER SOM ETT OBJEKT
  const newMonster = {
    name: monsterName,
    monsterType: monsterType,
    monsterHorns: monsterHorns,
    monsterLegs: monsterLegs,
    monsterEyes: monsterEyes,
    monsterTentacles: monsterTentacles,
    deleteSelf() {
      const index = monsters.indexOf(this);
      if (index > -1) {
        monsters.splice(index, 1);

        renderMonsters();
      }
    },
  };

  // L√ÑGG TILL MONSTRET I V√ÖR ARRAY
  monsters.push(newMonster);
  console.log(monsters);
  // VAD SOM BEH√ñVER G√ñRAS:
  // EN FUNKTION F√ñR ATT RENSA FORMUL√ÑRET

  // FUNKTION F√ñR ATT VISA MONSTER I LISTAN
  renderMonsters();
};

// KNAPP F√ñR ATT L√ÑGGA TILL MONSTER I LISTAN
doneButton.addEventListener("click", () => {
  addMonsterToArray();
});

///////////////////////////////////////////////////////
///////////////////////////////////////////////////////
//////  SLUT P√Ö KOD F√ñR ATT L√ÑGGA TILL MONSTER/////////
//////  S√ñKORD: addMonster                //////////
///////////////////////////////////////////////////////
///////////////////////////////////////////////////////

///////////////////////////////////////////////////////
///////////////////////////////////////////////////////
//////  KOD f√∂r att visa MONSTER             /////////
//////  S√ñKORD: renderMonsters               //////////
///////////////////////////////////////////////////////
///////////////////////////////////////////////////////

const renderMonsters = (filteredMonsters = monsters) => {
  // VAD SOM BEH√ñVER G√ñRAS:
  // ANPASSA S√Ö ATT KODEN G√ÖR ATT REDIGERA FR√ÖN ETT ST√ÑLLE (VG-NIV√Ö - M√ñJLIGTVIS DEN SV√ÖRASTE PUNKTEN I PROJEKTET (ELLER S√Ö √ÑR JAG BARA KORKAD))

  const monsterGallery = document.getElementById("monsterGallery");
  monsterGallery.innerHTML = "";

  const monsterGalleryHtmlArray = filteredMonsters.map((monster) => {
    return `
      <div class="monsterCard">
        <div class="monsterInfo">
          <h2 class="monsterName">${monster.name}</h2>
          <p class="monsterType">Monster Type: ${monster.monsterType}</p>
          <p class="monsterHorns">Horns: ${monster.monsterHorns}</p>
          <p class="monsterLegs">Legs: ${monster.monsterLegs}</p>
          <p class="monsterEyes">Eyes: ${monster.monsterEyes}</p>
          <p class="monsterTentacles">Tentacles: ${monster.monsterTentacles}</p>
          <button class="deleteButton"> Delete </button>
        </div>
      </div>
    `;
  });

  monsterGallery.innerHTML = monsterGalleryHtmlArray.join("");
  const deleteButton = document.querySelectorAll(".deleteButton");
  deleteButton.forEach((button, index) => {
    button.addEventListener("click", () => {
      monsters[index].deleteSelf();
    });
  });
};

///////////////////////////////////////////////////////
///////////////////////////////////////////////////////
//////  SLUT P√Ö KOD KOD f√∂r att visa MONSTER  /////////
//////  S√ñKORD: renderMonsters               //////////
///////////////////////////////////////////////////////
///////////////////////////////////////////////////////

///////////////////////////////////////////////////////
///////////////////////////////////////////////////////
//////  KOD f√∂r att visa MONSTERYPES          /////////
//////  S√ñKORD: monsterType                  //////////
///////////////////////////////////////////////////////
///////////////////////////////////////////////////////

const dietSelect = document.getElementById("monsterDietSelect");
const monsterDietTypes = [
  "ü•©Flesh-Muncher",
  "ü•¨Leaf-Cruncher",
  "üóëÔ∏èNon-Pesky-Omnivore",
];

const monsterTypeIcons = ["ü•©", "ü•¨", "üóëÔ∏è"];

for (let i = 0; i < monsterDietTypes.length; i++) {
  let choice = monsterDietTypes[i];

  let dropRows = document.createElement("option");
  dropRows.text = choice;
  dropRows.value = choice;
  dietSelect.appendChild(dropRows);
}

let typeSelect = document.getElementById("monsterTypeSelect");
let monsterTypes = ["Humanoid", "Fungal", "Titam", "Insectiod", "Troll"];

for (let i = 0; i < monsterTypes.length; i++) {
  let choice = monsterTypes[i];

  let dropRow = document.createElement("option");
  dropRow.text = choice;
  dropRow.value = choice;

  typeSelect.appendChild(dropRow);
}
const monsterTypeIcon = document.querySelector(".monsterTypeIcon");
// Optimera om vi har tid
dietSelect.addEventListener("change", () => {
  monsterTypeIcon.innerHTML = "";

  if (dietSelect.value === "ü•©Flesh-Muncher") {
    monsterTypeIcon.innerHTML = "ü•©";
  } else if (dietSelect.value === "ü•¨Leaf-Cruncher") {
    monsterTypeIcon.innerHTML = "ü•¨";
  } else if (dietSelect.value === "üóëÔ∏èNon-Pesky-Omnivore") {
    monsterTypeIcon.innerHTML = "üóëÔ∏è";
  }
});

///////////////////////////////////////////////////////
///////////////////////////////////////////////////////
//////  SLUT P√Ö KOD f√∂r att visa MONSTERYPES /////////
//////  S√ñKORD: monsterType                  //////////
///////////////////////////////////////////////////////
///////////////////////////////////////////////////////

///////////////////////////////////////////////////////
///////////////////////////////////////////////////////
//////  KOD f√∂r att visa MONSTERSLIDER        /////////
//////  S√ñKORD: monsterSliders               //////////
///////////////////////////////////////////////////////
///////////////////////////////////////////////////////

function updateSliderValue(sliderId, valueId) {
  let slider = document.getElementById(sliderId);
  let valueDisplay = document.getElementById(valueId);

  valueDisplay.textContent = slider.value;

  slider.addEventListener("input", () => {
    valueDisplay.textContent = slider.value;
  });
}

updateSliderValue("hornsSlider", "hornsValue");
updateSliderValue("legsSlider", "legsValue");
updateSliderValue("eyesSlider", "eyesValue");
updateSliderValue("tentaclesSlider", "tentaclesValue");

///////////////////////////////////////////////////////
///////////////////////////////////////////////////////
//////  SLUT P√Ö KOD f√∂r att visa MONSTERSLIDER/////////
//////  S√ñKORD: monsterSliders               //////////
///////////////////////////////////////////////////////
///////////////////////////////////////////////////////

///////////////////////////////////////////////////////
///////////////////////////////////////////////////////
//////  KOD F√ñR ATT FILTRERA UTIFR√ÖN CHECKBOXES /////////
//////  S√ñKORD: filterMonsterList          //////////
///////////////////////////////////////////////////////
///////////////////////////////////////////////////////

//VAD SOM BEH√ñVER G√ñRAS:
// Skapa containers f√∂r checkboxes
// Kod som visar hur m√•nga av varje typ som finns. T.ex bredvid en checkbox som s√§ger "r√∂d" s√• ska det visas hur m√•nga r√∂da det finns
// L√§gg till eventListerners som kollar om checkbox √§r "checked"
// Skapa en funktion som skriver ut monster beroende p√• vilken checkbox som har "checked"

// Vi har 5 f√§rger och tre typer
// Det kan bara vara tv√• unika v√§rden f√∂r filtrering
// En funktion ska ta in v√§rdena och mapa ut en ny lista beroende p√• v√§rdena.

///////////////////////////////////////////////////////
///////////////////////////////////////////////////////
//////  SLUT P√Ö KOD F√ñR ATT FILTRERA UTIFR√ÖN CHECKBOXES /////////
//////  S√ñKORD: filterMonsterList                       //////////
///////////////////////////////////////////////////////
///////////////////////////////////////////////////////

///////////////////////////////////////////////////////
///////////////////////////////////////////////////////
//////  KOD F√ñR ATT REDIGERA MONSTER         /////////
//////  S√ñKORD: editMonster                 //////////
///////////////////////////////////////////////////////
///////////////////////////////////////////////////////

// VAD SOM BEH√ñVER G√ñRAS:
// Skapa en eventListener som lyssnar p√• att man klickar redigera
// Skapa en funktion som h√§mtar nya v√§rden fr√•n det man redigerat
// Uppdatera arrayen med det nya monstret och presentera det

///////////////////////////////////////////////////////
///////////////////////////////////////////////////////
////// SLUT P√Ö KOD F√ñR ATT REDIGERA MONSTER /////////
//////  S√ñKORD: editMonster                 //////////
///////////////////////////////////////////////////////
///////////////////////////////////////////////////////

// Allm√§nt
// VAD SOM BEH√ñVER G√ñRAS:
// Fundera p√• vilken funktionalitet som kan ligga i objekt (f√∂r VG-niv√•)
// Lista ut om varje monster ska ha en knapp f√∂r redigering eller om de ska vara en √∂vergripande funktion
//
